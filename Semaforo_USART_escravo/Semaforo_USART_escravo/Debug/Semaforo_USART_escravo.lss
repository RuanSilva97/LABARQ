
Semaforo_USART_escravo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000812  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000079e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  00000812  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000812  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000844  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000884  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009a6  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000722  00000000  00000000  0000127a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003eb  00000000  00000000  0000199c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000100  00000000  00000000  00001d88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b1  00000000  00000000  00001e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000262  00000000  00000000  00002339  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000259b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 ac 00 	jmp	0x158	; 0x158 <__vector_14>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_18>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	79 00       	.word	0x0079	; ????
  6a:	7f 00       	.word	0x007f	; ????
  6c:	82 00       	.word	0x0082	; ????
  6e:	85 00       	.word	0x0085	; ????
  70:	8e 00       	.word	0x008e	; ????
  72:	91 00       	.word	0x0091	; ????
  74:	94 00       	.word	0x0094	; ????
  76:	97 00       	.word	0x0097	; ????
  78:	9a 00       	.word	0x009a	; ????
  7a:	9d 00       	.word	0x009d	; ????

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ee e9       	ldi	r30, 0x9E	; 158
  90:	f7 e0       	ldi	r31, 0x07	; 7
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 30       	cpi	r26, 0x00	; 0
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a0 e0       	ldi	r26, 0x00	; 0
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	ac 30       	cpi	r26, 0x0C	; 12
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 93 01 	call	0x326	; 0x326 <main>
  b2:	0c 94 cd 03 	jmp	0x79a	; 0x79a <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <__vector_18>:

unsigned char USART_Receive(void)
{
	while(!(UCSR0A & (1<<RXC0)));	//Espera o dado ser recebido
	return UDR0;					//Lê o dado recebido e retorna
}
  ba:	1f 92       	push	r1
  bc:	0f 92       	push	r0
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	0f 92       	push	r0
  c2:	11 24       	eor	r1, r1
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	ef 93       	push	r30
  ce:	ff 93       	push	r31
  d0:	e0 91 c6 00 	lds	r30, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  d4:	36 99       	sbic	0x06, 6	; 6
  d6:	03 c0       	rjmp	.+6      	; 0xde <__vector_18+0x24>
  d8:	80 ef       	ldi	r24, 0xF0	; 240
  da:	85 b9       	out	0x05, r24	; 5
  dc:	32 c0       	rjmp	.+100    	; 0x142 <__vector_18+0x88>
  de:	8e 2f       	mov	r24, r30
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	8a 30       	cpi	r24, 0x0A	; 10
  e4:	91 05       	cpc	r25, r1
  e6:	68 f5       	brcc	.+90     	; 0x142 <__vector_18+0x88>
  e8:	fc 01       	movw	r30, r24
  ea:	ec 5c       	subi	r30, 0xCC	; 204
  ec:	ff 4f       	sbci	r31, 0xFF	; 255
  ee:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__tablejump2__>
  f2:	8b b1       	in	r24, 0x0b	; 11
  f4:	8f 77       	andi	r24, 0x7F	; 127
  f6:	8b b9       	out	0x0b, r24	; 11
  f8:	80 ef       	ldi	r24, 0xF0	; 240
  fa:	85 b9       	out	0x05, r24	; 5
  fc:	22 c0       	rjmp	.+68     	; 0x142 <__vector_18+0x88>
  fe:	80 e7       	ldi	r24, 0x70	; 112
 100:	85 b9       	out	0x05, r24	; 5
 102:	1f c0       	rjmp	.+62     	; 0x142 <__vector_18+0x88>
 104:	80 e3       	ldi	r24, 0x30	; 48
 106:	85 b9       	out	0x05, r24	; 5
 108:	1c c0       	rjmp	.+56     	; 0x142 <__vector_18+0x88>
 10a:	80 e1       	ldi	r24, 0x10	; 16
 10c:	85 b9       	out	0x05, r24	; 5
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <estado+0x1>
 116:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <estado>
 11a:	13 c0       	rjmp	.+38     	; 0x142 <__vector_18+0x88>
 11c:	80 e1       	ldi	r24, 0x10	; 16
 11e:	85 b9       	out	0x05, r24	; 5
 120:	10 c0       	rjmp	.+32     	; 0x142 <__vector_18+0x88>
 122:	80 e1       	ldi	r24, 0x10	; 16
 124:	85 b9       	out	0x05, r24	; 5
 126:	0d c0       	rjmp	.+26     	; 0x142 <__vector_18+0x88>
 128:	8f e0       	ldi	r24, 0x0F	; 15
 12a:	85 b9       	out	0x05, r24	; 5
 12c:	0a c0       	rjmp	.+20     	; 0x142 <__vector_18+0x88>
 12e:	87 e0       	ldi	r24, 0x07	; 7
 130:	85 b9       	out	0x05, r24	; 5
 132:	07 c0       	rjmp	.+14     	; 0x142 <__vector_18+0x88>
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	85 b9       	out	0x05, r24	; 5
 138:	04 c0       	rjmp	.+8      	; 0x142 <__vector_18+0x88>
 13a:	15 b8       	out	0x05, r1	; 5
 13c:	8b b1       	in	r24, 0x0b	; 11
 13e:	80 68       	ori	r24, 0x80	; 128
 140:	8b b9       	out	0x0b, r24	; 11
 142:	ff 91       	pop	r31
 144:	ef 91       	pop	r30
 146:	bf 91       	pop	r27
 148:	af 91       	pop	r26
 14a:	9f 91       	pop	r25
 14c:	8f 91       	pop	r24
 14e:	0f 90       	pop	r0
 150:	0f be       	out	0x3f, r0	; 63
 152:	0f 90       	pop	r0
 154:	1f 90       	pop	r1
 156:	18 95       	reti

00000158 <__vector_14>:
 158:	1f 92       	push	r1
 15a:	0f 92       	push	r0
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	0f 92       	push	r0
 160:	11 24       	eor	r1, r1
 162:	8f 93       	push	r24
 164:	9f 93       	push	r25
 166:	af 93       	push	r26
 168:	bf 93       	push	r27
 16a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <tempo_ms>
 16e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <tempo_ms+0x1>
 172:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <tempo_ms+0x2>
 176:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <tempo_ms+0x3>
 17a:	01 96       	adiw	r24, 0x01	; 1
 17c:	a1 1d       	adc	r26, r1
 17e:	b1 1d       	adc	r27, r1
 180:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <tempo_ms>
 184:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <tempo_ms+0x1>
 188:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <tempo_ms+0x2>
 18c:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <tempo_ms+0x3>
 190:	bf 91       	pop	r27
 192:	af 91       	pop	r26
 194:	9f 91       	pop	r25
 196:	8f 91       	pop	r24
 198:	0f 90       	pop	r0
 19a:	0f be       	out	0x3f, r0	; 63
 19c:	0f 90       	pop	r0
 19e:	1f 90       	pop	r1
 1a0:	18 95       	reti

000001a2 <pwm_servo>:

void pwm_servo(float porcentagem)
{
 1a2:	8f 92       	push	r8
 1a4:	9f 92       	push	r9
 1a6:	af 92       	push	r10
 1a8:	bf 92       	push	r11
 1aa:	cf 92       	push	r12
 1ac:	df 92       	push	r13
 1ae:	ef 92       	push	r14
 1b0:	ff 92       	push	r15
 1b2:	0f 93       	push	r16
 1b4:	1f 93       	push	r17
	float alto = (porcentagem/100)*20, baixo = 20 - alto;
 1b6:	20 e0       	ldi	r18, 0x00	; 0
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	48 ec       	ldi	r20, 0xC8	; 200
 1bc:	52 e4       	ldi	r21, 0x42	; 66
 1be:	0e 94 36 02 	call	0x46c	; 0x46c <__divsf3>
 1c2:	20 e0       	ldi	r18, 0x00	; 0
 1c4:	30 e0       	ldi	r19, 0x00	; 0
 1c6:	40 ea       	ldi	r20, 0xA0	; 160
 1c8:	51 e4       	ldi	r21, 0x41	; 65
 1ca:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__mulsf3>
 1ce:	4b 01       	movw	r8, r22
 1d0:	5c 01       	movw	r10, r24
 1d2:	9b 01       	movw	r18, r22
 1d4:	ac 01       	movw	r20, r24
 1d6:	60 e0       	ldi	r22, 0x00	; 0
 1d8:	70 e0       	ldi	r23, 0x00	; 0
 1da:	80 ea       	ldi	r24, 0xA0	; 160
 1dc:	91 e4       	ldi	r25, 0x41	; 65
 1de:	0e 94 c4 01 	call	0x388	; 0x388 <__subsf3>
 1e2:	6b 01       	movw	r12, r22
 1e4:	7c 01       	movw	r14, r24
	
	if((tempo_ms - tempo_ms_anterior) >= alto && flag == 0){
 1e6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <tempo_ms>
 1ea:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <tempo_ms+0x1>
 1ee:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <tempo_ms+0x2>
 1f2:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <tempo_ms+0x3>
 1f6:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <tempo_ms_anterior>
 1fa:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <tempo_ms_anterior+0x1>
 1fe:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <tempo_ms_anterior+0x2>
 202:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <tempo_ms_anterior+0x3>
 206:	bc 01       	movw	r22, r24
 208:	cd 01       	movw	r24, r26
 20a:	60 1b       	sub	r22, r16
 20c:	71 0b       	sbc	r23, r17
 20e:	82 0b       	sbc	r24, r18
 210:	93 0b       	sbc	r25, r19
 212:	0e 94 a8 02 	call	0x550	; 0x550 <__floatunsisf>
 216:	9b 01       	movw	r18, r22
 218:	ac 01       	movw	r20, r24
 21a:	c5 01       	movw	r24, r10
 21c:	b4 01       	movw	r22, r8
 21e:	0e 94 31 02 	call	0x462	; 0x462 <__cmpsf2>
 222:	18 16       	cp	r1, r24
 224:	14 f1       	brlt	.+68     	; 0x26a <pwm_servo+0xc8>
 226:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 22a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 22e:	89 2b       	or	r24, r25
 230:	e1 f4       	brne	.+56     	; 0x26a <pwm_servo+0xc8>
		PORTD  &= ~(1<<2);  //Pinos PB7 em nivel baixo
 232:	8b b1       	in	r24, 0x0b	; 11
 234:	8b 7f       	andi	r24, 0xFB	; 251
 236:	8b b9       	out	0x0b, r24	; 11
		flag ++;
 238:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 23c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 240:	01 96       	adiw	r24, 0x01	; 1
 242:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
 246:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
		tempo_ms_anterior = tempo_ms;
 24a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <tempo_ms>
 24e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <tempo_ms+0x1>
 252:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <tempo_ms+0x2>
 256:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <tempo_ms+0x3>
 25a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <tempo_ms_anterior>
 25e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <tempo_ms_anterior+0x1>
 262:	a0 93 04 01 	sts	0x0104, r26	; 0x800104 <tempo_ms_anterior+0x2>
 266:	b0 93 05 01 	sts	0x0105, r27	; 0x800105 <tempo_ms_anterior+0x3>
	}
	
	if((tempo_ms - tempo_ms_anterior) >= baixo && flag == 1){
 26a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <tempo_ms>
 26e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <tempo_ms+0x1>
 272:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <tempo_ms+0x2>
 276:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <tempo_ms+0x3>
 27a:	80 90 02 01 	lds	r8, 0x0102	; 0x800102 <tempo_ms_anterior>
 27e:	90 90 03 01 	lds	r9, 0x0103	; 0x800103 <tempo_ms_anterior+0x1>
 282:	a0 90 04 01 	lds	r10, 0x0104	; 0x800104 <tempo_ms_anterior+0x2>
 286:	b0 90 05 01 	lds	r11, 0x0105	; 0x800105 <tempo_ms_anterior+0x3>
 28a:	bc 01       	movw	r22, r24
 28c:	cd 01       	movw	r24, r26
 28e:	68 19       	sub	r22, r8
 290:	79 09       	sbc	r23, r9
 292:	8a 09       	sbc	r24, r10
 294:	9b 09       	sbc	r25, r11
 296:	0e 94 a8 02 	call	0x550	; 0x550 <__floatunsisf>
 29a:	9b 01       	movw	r18, r22
 29c:	ac 01       	movw	r20, r24
 29e:	c7 01       	movw	r24, r14
 2a0:	b6 01       	movw	r22, r12
 2a2:	0e 94 31 02 	call	0x462	; 0x462 <__cmpsf2>
 2a6:	18 16       	cp	r1, r24
 2a8:	ec f0       	brlt	.+58     	; 0x2e4 <pwm_servo+0x142>
 2aa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 2ae:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	b9 f4       	brne	.+46     	; 0x2e4 <pwm_servo+0x142>
		PORTD  |= (1<<2);  //Pinos PD3 em nivel alto
 2b6:	8b b1       	in	r24, 0x0b	; 11
 2b8:	84 60       	ori	r24, 0x04	; 4
 2ba:	8b b9       	out	0x0b, r24	; 11
		flag = 0;
 2bc:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_end+0x1>
 2c0:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
		tempo_ms_anterior = tempo_ms;	
 2c4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <tempo_ms>
 2c8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <tempo_ms+0x1>
 2cc:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <tempo_ms+0x2>
 2d0:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <tempo_ms+0x3>
 2d4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <tempo_ms_anterior>
 2d8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <tempo_ms_anterior+0x1>
 2dc:	a0 93 04 01 	sts	0x0104, r26	; 0x800104 <tempo_ms_anterior+0x2>
 2e0:	b0 93 05 01 	sts	0x0105, r27	; 0x800105 <tempo_ms_anterior+0x3>
	}	
}
 2e4:	1f 91       	pop	r17
 2e6:	0f 91       	pop	r16
 2e8:	ff 90       	pop	r15
 2ea:	ef 90       	pop	r14
 2ec:	df 90       	pop	r13
 2ee:	cf 90       	pop	r12
 2f0:	bf 90       	pop	r11
 2f2:	af 90       	pop	r10
 2f4:	9f 90       	pop	r9
 2f6:	8f 90       	pop	r8
 2f8:	08 95       	ret

000002fa <trem>:

// Implementação das funções

void trem()
{
	if(!(PINC & (1<<6)))
 2fa:	36 99       	sbic	0x06, 6	; 6
 2fc:	0a c0       	rjmp	.+20     	; 0x312 <trem+0x18>
	{
		PORTD  |= (1<<4);  //Pinos PD4 em nivel alto
 2fe:	8b b1       	in	r24, 0x0b	; 11
 300:	80 61       	ori	r24, 0x10	; 16
 302:	8b b9       	out	0x0b, r24	; 11
		pwm_servo(7.5);
 304:	60 e0       	ldi	r22, 0x00	; 0
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	80 ef       	ldi	r24, 0xF0	; 240
 30a:	90 e4       	ldi	r25, 0x40	; 64
 30c:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <pwm_servo>
 310:	08 95       	ret
	}
	else
	{
		PORTD  &= ~(1<<4);  //Pinos PB7 em nivel baixo
 312:	8b b1       	in	r24, 0x0b	; 11
 314:	8f 7e       	andi	r24, 0xEF	; 239
 316:	8b b9       	out	0x0b, r24	; 11
		pwm_servo(5);
 318:	60 e0       	ldi	r22, 0x00	; 0
 31a:	70 e0       	ldi	r23, 0x00	; 0
 31c:	80 ea       	ldi	r24, 0xA0	; 160
 31e:	90 e4       	ldi	r25, 0x40	; 64
 320:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <pwm_servo>
 324:	08 95       	ret

00000326 <main>:
// Função main

int main(void)
{
	// GPIO
	DDRB	= 0b11111111;		// Habilita os pinos PB0...7 como saida
 326:	9f ef       	ldi	r25, 0xFF	; 255
 328:	94 b9       	out	0x04, r25	; 4
	DDRD	= ((1<<4)|(1<<2));			// Habilita o  pino  PD2, PD4 como saida
 32a:	84 e1       	ldi	r24, 0x14	; 20
 32c:	8a b9       	out	0x0a, r24	; 10
	PORTD  |= (1<<2);
 32e:	8b b1       	in	r24, 0x0b	; 11
 330:	84 60       	ori	r24, 0x04	; 4
 332:	8b b9       	out	0x0b, r24	; 11
	DDRC	= ~(1<<6);
 334:	8f eb       	ldi	r24, 0xBF	; 191
 336:	87 b9       	out	0x07, r24	; 7
	PORTC  |= (1<<6);
 338:	88 b1       	in	r24, 0x08	; 8
 33a:	80 64       	ori	r24, 0x40	; 64
 33c:	88 b9       	out	0x08, r24	; 8
	
	// Configuração  da USART
	UBRR0H = (unsigned char)(MYUBRR>>8);				// Ajusta a taxa de transmissão
 33e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)MYUBRR;
 342:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);			// Habilita o transmissor e o receptor e a interrupção de recepção da USART
 346:	88 e9       	ldi	r24, 0x98	; 152
 348:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (3<<UCSZ00);								// Ajusta o formato do frame: 8 bits de dados e 1 de parada
 34c:	86 e0       	ldi	r24, 0x06	; 6
 34e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	
	// Configuração do PWM
	//Fast PWM, OC2A e OC2B habilitados
	ICR1 = 39999;
 352:	8f e3       	ldi	r24, 0x3F	; 63
 354:	9c e9       	ldi	r25, 0x9C	; 156
 356:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 35a:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	TCCR2A = 0b10100010;	// PWM não invertido no pino OC2B
 35e:	82 ea       	ldi	r24, 0xA2	; 162
 360:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	TCCR2B = 0b00011010;	// Orescaler = 8
 364:	8a e1       	ldi	r24, 0x1A	; 26
 366:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
	OCR2B = 2000;
 36a:	80 ed       	ldi	r24, 0xD0	; 208
 36c:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	
	// Interrupções do timer
	TCCR0A = 0b00000010;		// Habilita modo Ctc do TC0
 370:	82 e0       	ldi	r24, 0x02	; 2
 372:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0b00000011;		// Liga TC0 com prescaler = 64
 374:	93 e0       	ldi	r25, 0x03	; 3
 376:	95 bd       	out	0x25, r25	; 37
	OCR0A  = 249;				// Ajusta o comparador para o TC0 contar até 249
 378:	99 ef       	ldi	r25, 0xF9	; 249
 37a:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = 0b00000010;		// Habilita a interrupção na igualdade de comparação com OCR0A.
 37c:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	// A interrupção ocorre a cada 1 ms = (64 * (249 + 1)) / 16 MHz
	sei();						// Habilita interrupções globais, ativando o bit I do SREG
 380:	78 94       	sei
	
	while (1)
	{
		trem();
 382:	0e 94 7d 01 	call	0x2fa	; 0x2fa <trem>
 386:	fd cf       	rjmp	.-6      	; 0x382 <main+0x5c>

00000388 <__subsf3>:
 388:	50 58       	subi	r21, 0x80	; 128

0000038a <__addsf3>:
 38a:	bb 27       	eor	r27, r27
 38c:	aa 27       	eor	r26, r26
 38e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__addsf3x>
 392:	0c 94 20 03 	jmp	0x640	; 0x640 <__fp_round>
 396:	0e 94 12 03 	call	0x624	; 0x624 <__fp_pscA>
 39a:	38 f0       	brcs	.+14     	; 0x3aa <__addsf3+0x20>
 39c:	0e 94 19 03 	call	0x632	; 0x632 <__fp_pscB>
 3a0:	20 f0       	brcs	.+8      	; 0x3aa <__addsf3+0x20>
 3a2:	39 f4       	brne	.+14     	; 0x3b2 <__addsf3+0x28>
 3a4:	9f 3f       	cpi	r25, 0xFF	; 255
 3a6:	19 f4       	brne	.+6      	; 0x3ae <__addsf3+0x24>
 3a8:	26 f4       	brtc	.+8      	; 0x3b2 <__addsf3+0x28>
 3aa:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_nan>
 3ae:	0e f4       	brtc	.+2      	; 0x3b2 <__addsf3+0x28>
 3b0:	e0 95       	com	r30
 3b2:	e7 fb       	bst	r30, 7
 3b4:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_inf>

000003b8 <__addsf3x>:
 3b8:	e9 2f       	mov	r30, r25
 3ba:	0e 94 31 03 	call	0x662	; 0x662 <__fp_split3>
 3be:	58 f3       	brcs	.-42     	; 0x396 <__addsf3+0xc>
 3c0:	ba 17       	cp	r27, r26
 3c2:	62 07       	cpc	r22, r18
 3c4:	73 07       	cpc	r23, r19
 3c6:	84 07       	cpc	r24, r20
 3c8:	95 07       	cpc	r25, r21
 3ca:	20 f0       	brcs	.+8      	; 0x3d4 <__addsf3x+0x1c>
 3cc:	79 f4       	brne	.+30     	; 0x3ec <__addsf3x+0x34>
 3ce:	a6 f5       	brtc	.+104    	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 3d0:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__fp_zero>
 3d4:	0e f4       	brtc	.+2      	; 0x3d8 <__addsf3x+0x20>
 3d6:	e0 95       	com	r30
 3d8:	0b 2e       	mov	r0, r27
 3da:	ba 2f       	mov	r27, r26
 3dc:	a0 2d       	mov	r26, r0
 3de:	0b 01       	movw	r0, r22
 3e0:	b9 01       	movw	r22, r18
 3e2:	90 01       	movw	r18, r0
 3e4:	0c 01       	movw	r0, r24
 3e6:	ca 01       	movw	r24, r20
 3e8:	a0 01       	movw	r20, r0
 3ea:	11 24       	eor	r1, r1
 3ec:	ff 27       	eor	r31, r31
 3ee:	59 1b       	sub	r21, r25
 3f0:	99 f0       	breq	.+38     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3f2:	59 3f       	cpi	r21, 0xF9	; 249
 3f4:	50 f4       	brcc	.+20     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3f6:	50 3e       	cpi	r21, 0xE0	; 224
 3f8:	68 f1       	brcs	.+90     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 3fa:	1a 16       	cp	r1, r26
 3fc:	f0 40       	sbci	r31, 0x00	; 0
 3fe:	a2 2f       	mov	r26, r18
 400:	23 2f       	mov	r18, r19
 402:	34 2f       	mov	r19, r20
 404:	44 27       	eor	r20, r20
 406:	58 5f       	subi	r21, 0xF8	; 248
 408:	f3 cf       	rjmp	.-26     	; 0x3f0 <__addsf3x+0x38>
 40a:	46 95       	lsr	r20
 40c:	37 95       	ror	r19
 40e:	27 95       	ror	r18
 410:	a7 95       	ror	r26
 412:	f0 40       	sbci	r31, 0x00	; 0
 414:	53 95       	inc	r21
 416:	c9 f7       	brne	.-14     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 418:	7e f4       	brtc	.+30     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 41a:	1f 16       	cp	r1, r31
 41c:	ba 0b       	sbc	r27, r26
 41e:	62 0b       	sbc	r22, r18
 420:	73 0b       	sbc	r23, r19
 422:	84 0b       	sbc	r24, r20
 424:	ba f0       	brmi	.+46     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 426:	91 50       	subi	r25, 0x01	; 1
 428:	a1 f0       	breq	.+40     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 42a:	ff 0f       	add	r31, r31
 42c:	bb 1f       	adc	r27, r27
 42e:	66 1f       	adc	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	c2 f7       	brpl	.-16     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 436:	0e c0       	rjmp	.+28     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 438:	ba 0f       	add	r27, r26
 43a:	62 1f       	adc	r22, r18
 43c:	73 1f       	adc	r23, r19
 43e:	84 1f       	adc	r24, r20
 440:	48 f4       	brcc	.+18     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 442:	87 95       	ror	r24
 444:	77 95       	ror	r23
 446:	67 95       	ror	r22
 448:	b7 95       	ror	r27
 44a:	f7 95       	ror	r31
 44c:	9e 3f       	cpi	r25, 0xFE	; 254
 44e:	08 f0       	brcs	.+2      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 450:	b0 cf       	rjmp	.-160    	; 0x3b2 <__addsf3+0x28>
 452:	93 95       	inc	r25
 454:	88 0f       	add	r24, r24
 456:	08 f0       	brcs	.+2      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 458:	99 27       	eor	r25, r25
 45a:	ee 0f       	add	r30, r30
 45c:	97 95       	ror	r25
 45e:	87 95       	ror	r24
 460:	08 95       	ret

00000462 <__cmpsf2>:
 462:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__fp_cmp>
 466:	08 f4       	brcc	.+2      	; 0x46a <__cmpsf2+0x8>
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	08 95       	ret

0000046c <__divsf3>:
 46c:	0e 94 4a 02 	call	0x494	; 0x494 <__divsf3x>
 470:	0c 94 20 03 	jmp	0x640	; 0x640 <__fp_round>
 474:	0e 94 19 03 	call	0x632	; 0x632 <__fp_pscB>
 478:	58 f0       	brcs	.+22     	; 0x490 <__divsf3+0x24>
 47a:	0e 94 12 03 	call	0x624	; 0x624 <__fp_pscA>
 47e:	40 f0       	brcs	.+16     	; 0x490 <__divsf3+0x24>
 480:	29 f4       	brne	.+10     	; 0x48c <__divsf3+0x20>
 482:	5f 3f       	cpi	r21, 0xFF	; 255
 484:	29 f0       	breq	.+10     	; 0x490 <__divsf3+0x24>
 486:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_inf>
 48a:	51 11       	cpse	r21, r1
 48c:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_szero>
 490:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_nan>

00000494 <__divsf3x>:
 494:	0e 94 31 03 	call	0x662	; 0x662 <__fp_split3>
 498:	68 f3       	brcs	.-38     	; 0x474 <__divsf3+0x8>

0000049a <__divsf3_pse>:
 49a:	99 23       	and	r25, r25
 49c:	b1 f3       	breq	.-20     	; 0x48a <__divsf3+0x1e>
 49e:	55 23       	and	r21, r21
 4a0:	91 f3       	breq	.-28     	; 0x486 <__divsf3+0x1a>
 4a2:	95 1b       	sub	r25, r21
 4a4:	55 0b       	sbc	r21, r21
 4a6:	bb 27       	eor	r27, r27
 4a8:	aa 27       	eor	r26, r26
 4aa:	62 17       	cp	r22, r18
 4ac:	73 07       	cpc	r23, r19
 4ae:	84 07       	cpc	r24, r20
 4b0:	38 f0       	brcs	.+14     	; 0x4c0 <__divsf3_pse+0x26>
 4b2:	9f 5f       	subi	r25, 0xFF	; 255
 4b4:	5f 4f       	sbci	r21, 0xFF	; 255
 4b6:	22 0f       	add	r18, r18
 4b8:	33 1f       	adc	r19, r19
 4ba:	44 1f       	adc	r20, r20
 4bc:	aa 1f       	adc	r26, r26
 4be:	a9 f3       	breq	.-22     	; 0x4aa <__divsf3_pse+0x10>
 4c0:	35 d0       	rcall	.+106    	; 0x52c <__divsf3_pse+0x92>
 4c2:	0e 2e       	mov	r0, r30
 4c4:	3a f0       	brmi	.+14     	; 0x4d4 <__divsf3_pse+0x3a>
 4c6:	e0 e8       	ldi	r30, 0x80	; 128
 4c8:	32 d0       	rcall	.+100    	; 0x52e <__divsf3_pse+0x94>
 4ca:	91 50       	subi	r25, 0x01	; 1
 4cc:	50 40       	sbci	r21, 0x00	; 0
 4ce:	e6 95       	lsr	r30
 4d0:	00 1c       	adc	r0, r0
 4d2:	ca f7       	brpl	.-14     	; 0x4c6 <__divsf3_pse+0x2c>
 4d4:	2b d0       	rcall	.+86     	; 0x52c <__divsf3_pse+0x92>
 4d6:	fe 2f       	mov	r31, r30
 4d8:	29 d0       	rcall	.+82     	; 0x52c <__divsf3_pse+0x92>
 4da:	66 0f       	add	r22, r22
 4dc:	77 1f       	adc	r23, r23
 4de:	88 1f       	adc	r24, r24
 4e0:	bb 1f       	adc	r27, r27
 4e2:	26 17       	cp	r18, r22
 4e4:	37 07       	cpc	r19, r23
 4e6:	48 07       	cpc	r20, r24
 4e8:	ab 07       	cpc	r26, r27
 4ea:	b0 e8       	ldi	r27, 0x80	; 128
 4ec:	09 f0       	breq	.+2      	; 0x4f0 <__divsf3_pse+0x56>
 4ee:	bb 0b       	sbc	r27, r27
 4f0:	80 2d       	mov	r24, r0
 4f2:	bf 01       	movw	r22, r30
 4f4:	ff 27       	eor	r31, r31
 4f6:	93 58       	subi	r25, 0x83	; 131
 4f8:	5f 4f       	sbci	r21, 0xFF	; 255
 4fa:	3a f0       	brmi	.+14     	; 0x50a <__divsf3_pse+0x70>
 4fc:	9e 3f       	cpi	r25, 0xFE	; 254
 4fe:	51 05       	cpc	r21, r1
 500:	78 f0       	brcs	.+30     	; 0x520 <__divsf3_pse+0x86>
 502:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_inf>
 506:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_szero>
 50a:	5f 3f       	cpi	r21, 0xFF	; 255
 50c:	e4 f3       	brlt	.-8      	; 0x506 <__divsf3_pse+0x6c>
 50e:	98 3e       	cpi	r25, 0xE8	; 232
 510:	d4 f3       	brlt	.-12     	; 0x506 <__divsf3_pse+0x6c>
 512:	86 95       	lsr	r24
 514:	77 95       	ror	r23
 516:	67 95       	ror	r22
 518:	b7 95       	ror	r27
 51a:	f7 95       	ror	r31
 51c:	9f 5f       	subi	r25, 0xFF	; 255
 51e:	c9 f7       	brne	.-14     	; 0x512 <__divsf3_pse+0x78>
 520:	88 0f       	add	r24, r24
 522:	91 1d       	adc	r25, r1
 524:	96 95       	lsr	r25
 526:	87 95       	ror	r24
 528:	97 f9       	bld	r25, 7
 52a:	08 95       	ret
 52c:	e1 e0       	ldi	r30, 0x01	; 1
 52e:	66 0f       	add	r22, r22
 530:	77 1f       	adc	r23, r23
 532:	88 1f       	adc	r24, r24
 534:	bb 1f       	adc	r27, r27
 536:	62 17       	cp	r22, r18
 538:	73 07       	cpc	r23, r19
 53a:	84 07       	cpc	r24, r20
 53c:	ba 07       	cpc	r27, r26
 53e:	20 f0       	brcs	.+8      	; 0x548 <__divsf3_pse+0xae>
 540:	62 1b       	sub	r22, r18
 542:	73 0b       	sbc	r23, r19
 544:	84 0b       	sbc	r24, r20
 546:	ba 0b       	sbc	r27, r26
 548:	ee 1f       	adc	r30, r30
 54a:	88 f7       	brcc	.-30     	; 0x52e <__divsf3_pse+0x94>
 54c:	e0 95       	com	r30
 54e:	08 95       	ret

00000550 <__floatunsisf>:
 550:	e8 94       	clt
 552:	09 c0       	rjmp	.+18     	; 0x566 <__floatsisf+0x12>

00000554 <__floatsisf>:
 554:	97 fb       	bst	r25, 7
 556:	3e f4       	brtc	.+14     	; 0x566 <__floatsisf+0x12>
 558:	90 95       	com	r25
 55a:	80 95       	com	r24
 55c:	70 95       	com	r23
 55e:	61 95       	neg	r22
 560:	7f 4f       	sbci	r23, 0xFF	; 255
 562:	8f 4f       	sbci	r24, 0xFF	; 255
 564:	9f 4f       	sbci	r25, 0xFF	; 255
 566:	99 23       	and	r25, r25
 568:	a9 f0       	breq	.+42     	; 0x594 <__floatsisf+0x40>
 56a:	f9 2f       	mov	r31, r25
 56c:	96 e9       	ldi	r25, 0x96	; 150
 56e:	bb 27       	eor	r27, r27
 570:	93 95       	inc	r25
 572:	f6 95       	lsr	r31
 574:	87 95       	ror	r24
 576:	77 95       	ror	r23
 578:	67 95       	ror	r22
 57a:	b7 95       	ror	r27
 57c:	f1 11       	cpse	r31, r1
 57e:	f8 cf       	rjmp	.-16     	; 0x570 <__floatsisf+0x1c>
 580:	fa f4       	brpl	.+62     	; 0x5c0 <__floatsisf+0x6c>
 582:	bb 0f       	add	r27, r27
 584:	11 f4       	brne	.+4      	; 0x58a <__floatsisf+0x36>
 586:	60 ff       	sbrs	r22, 0
 588:	1b c0       	rjmp	.+54     	; 0x5c0 <__floatsisf+0x6c>
 58a:	6f 5f       	subi	r22, 0xFF	; 255
 58c:	7f 4f       	sbci	r23, 0xFF	; 255
 58e:	8f 4f       	sbci	r24, 0xFF	; 255
 590:	9f 4f       	sbci	r25, 0xFF	; 255
 592:	16 c0       	rjmp	.+44     	; 0x5c0 <__floatsisf+0x6c>
 594:	88 23       	and	r24, r24
 596:	11 f0       	breq	.+4      	; 0x59c <__floatsisf+0x48>
 598:	96 e9       	ldi	r25, 0x96	; 150
 59a:	11 c0       	rjmp	.+34     	; 0x5be <__floatsisf+0x6a>
 59c:	77 23       	and	r23, r23
 59e:	21 f0       	breq	.+8      	; 0x5a8 <__floatsisf+0x54>
 5a0:	9e e8       	ldi	r25, 0x8E	; 142
 5a2:	87 2f       	mov	r24, r23
 5a4:	76 2f       	mov	r23, r22
 5a6:	05 c0       	rjmp	.+10     	; 0x5b2 <__floatsisf+0x5e>
 5a8:	66 23       	and	r22, r22
 5aa:	71 f0       	breq	.+28     	; 0x5c8 <__floatsisf+0x74>
 5ac:	96 e8       	ldi	r25, 0x86	; 134
 5ae:	86 2f       	mov	r24, r22
 5b0:	70 e0       	ldi	r23, 0x00	; 0
 5b2:	60 e0       	ldi	r22, 0x00	; 0
 5b4:	2a f0       	brmi	.+10     	; 0x5c0 <__floatsisf+0x6c>
 5b6:	9a 95       	dec	r25
 5b8:	66 0f       	add	r22, r22
 5ba:	77 1f       	adc	r23, r23
 5bc:	88 1f       	adc	r24, r24
 5be:	da f7       	brpl	.-10     	; 0x5b6 <__floatsisf+0x62>
 5c0:	88 0f       	add	r24, r24
 5c2:	96 95       	lsr	r25
 5c4:	87 95       	ror	r24
 5c6:	97 f9       	bld	r25, 7
 5c8:	08 95       	ret

000005ca <__fp_cmp>:
 5ca:	99 0f       	add	r25, r25
 5cc:	00 08       	sbc	r0, r0
 5ce:	55 0f       	add	r21, r21
 5d0:	aa 0b       	sbc	r26, r26
 5d2:	e0 e8       	ldi	r30, 0x80	; 128
 5d4:	fe ef       	ldi	r31, 0xFE	; 254
 5d6:	16 16       	cp	r1, r22
 5d8:	17 06       	cpc	r1, r23
 5da:	e8 07       	cpc	r30, r24
 5dc:	f9 07       	cpc	r31, r25
 5de:	c0 f0       	brcs	.+48     	; 0x610 <__fp_cmp+0x46>
 5e0:	12 16       	cp	r1, r18
 5e2:	13 06       	cpc	r1, r19
 5e4:	e4 07       	cpc	r30, r20
 5e6:	f5 07       	cpc	r31, r21
 5e8:	98 f0       	brcs	.+38     	; 0x610 <__fp_cmp+0x46>
 5ea:	62 1b       	sub	r22, r18
 5ec:	73 0b       	sbc	r23, r19
 5ee:	84 0b       	sbc	r24, r20
 5f0:	95 0b       	sbc	r25, r21
 5f2:	39 f4       	brne	.+14     	; 0x602 <__fp_cmp+0x38>
 5f4:	0a 26       	eor	r0, r26
 5f6:	61 f0       	breq	.+24     	; 0x610 <__fp_cmp+0x46>
 5f8:	23 2b       	or	r18, r19
 5fa:	24 2b       	or	r18, r20
 5fc:	25 2b       	or	r18, r21
 5fe:	21 f4       	brne	.+8      	; 0x608 <__fp_cmp+0x3e>
 600:	08 95       	ret
 602:	0a 26       	eor	r0, r26
 604:	09 f4       	brne	.+2      	; 0x608 <__fp_cmp+0x3e>
 606:	a1 40       	sbci	r26, 0x01	; 1
 608:	a6 95       	lsr	r26
 60a:	8f ef       	ldi	r24, 0xFF	; 255
 60c:	81 1d       	adc	r24, r1
 60e:	81 1d       	adc	r24, r1
 610:	08 95       	ret

00000612 <__fp_inf>:
 612:	97 f9       	bld	r25, 7
 614:	9f 67       	ori	r25, 0x7F	; 127
 616:	80 e8       	ldi	r24, 0x80	; 128
 618:	70 e0       	ldi	r23, 0x00	; 0
 61a:	60 e0       	ldi	r22, 0x00	; 0
 61c:	08 95       	ret

0000061e <__fp_nan>:
 61e:	9f ef       	ldi	r25, 0xFF	; 255
 620:	80 ec       	ldi	r24, 0xC0	; 192
 622:	08 95       	ret

00000624 <__fp_pscA>:
 624:	00 24       	eor	r0, r0
 626:	0a 94       	dec	r0
 628:	16 16       	cp	r1, r22
 62a:	17 06       	cpc	r1, r23
 62c:	18 06       	cpc	r1, r24
 62e:	09 06       	cpc	r0, r25
 630:	08 95       	ret

00000632 <__fp_pscB>:
 632:	00 24       	eor	r0, r0
 634:	0a 94       	dec	r0
 636:	12 16       	cp	r1, r18
 638:	13 06       	cpc	r1, r19
 63a:	14 06       	cpc	r1, r20
 63c:	05 06       	cpc	r0, r21
 63e:	08 95       	ret

00000640 <__fp_round>:
 640:	09 2e       	mov	r0, r25
 642:	03 94       	inc	r0
 644:	00 0c       	add	r0, r0
 646:	11 f4       	brne	.+4      	; 0x64c <__fp_round+0xc>
 648:	88 23       	and	r24, r24
 64a:	52 f0       	brmi	.+20     	; 0x660 <__fp_round+0x20>
 64c:	bb 0f       	add	r27, r27
 64e:	40 f4       	brcc	.+16     	; 0x660 <__fp_round+0x20>
 650:	bf 2b       	or	r27, r31
 652:	11 f4       	brne	.+4      	; 0x658 <__fp_round+0x18>
 654:	60 ff       	sbrs	r22, 0
 656:	04 c0       	rjmp	.+8      	; 0x660 <__fp_round+0x20>
 658:	6f 5f       	subi	r22, 0xFF	; 255
 65a:	7f 4f       	sbci	r23, 0xFF	; 255
 65c:	8f 4f       	sbci	r24, 0xFF	; 255
 65e:	9f 4f       	sbci	r25, 0xFF	; 255
 660:	08 95       	ret

00000662 <__fp_split3>:
 662:	57 fd       	sbrc	r21, 7
 664:	90 58       	subi	r25, 0x80	; 128
 666:	44 0f       	add	r20, r20
 668:	55 1f       	adc	r21, r21
 66a:	59 f0       	breq	.+22     	; 0x682 <__fp_splitA+0x10>
 66c:	5f 3f       	cpi	r21, 0xFF	; 255
 66e:	71 f0       	breq	.+28     	; 0x68c <__fp_splitA+0x1a>
 670:	47 95       	ror	r20

00000672 <__fp_splitA>:
 672:	88 0f       	add	r24, r24
 674:	97 fb       	bst	r25, 7
 676:	99 1f       	adc	r25, r25
 678:	61 f0       	breq	.+24     	; 0x692 <__fp_splitA+0x20>
 67a:	9f 3f       	cpi	r25, 0xFF	; 255
 67c:	79 f0       	breq	.+30     	; 0x69c <__fp_splitA+0x2a>
 67e:	87 95       	ror	r24
 680:	08 95       	ret
 682:	12 16       	cp	r1, r18
 684:	13 06       	cpc	r1, r19
 686:	14 06       	cpc	r1, r20
 688:	55 1f       	adc	r21, r21
 68a:	f2 cf       	rjmp	.-28     	; 0x670 <__fp_split3+0xe>
 68c:	46 95       	lsr	r20
 68e:	f1 df       	rcall	.-30     	; 0x672 <__fp_splitA>
 690:	08 c0       	rjmp	.+16     	; 0x6a2 <__fp_splitA+0x30>
 692:	16 16       	cp	r1, r22
 694:	17 06       	cpc	r1, r23
 696:	18 06       	cpc	r1, r24
 698:	99 1f       	adc	r25, r25
 69a:	f1 cf       	rjmp	.-30     	; 0x67e <__fp_splitA+0xc>
 69c:	86 95       	lsr	r24
 69e:	71 05       	cpc	r23, r1
 6a0:	61 05       	cpc	r22, r1
 6a2:	08 94       	sec
 6a4:	08 95       	ret

000006a6 <__fp_zero>:
 6a6:	e8 94       	clt

000006a8 <__fp_szero>:
 6a8:	bb 27       	eor	r27, r27
 6aa:	66 27       	eor	r22, r22
 6ac:	77 27       	eor	r23, r23
 6ae:	cb 01       	movw	r24, r22
 6b0:	97 f9       	bld	r25, 7
 6b2:	08 95       	ret

000006b4 <__mulsf3>:
 6b4:	0e 94 6d 03 	call	0x6da	; 0x6da <__mulsf3x>
 6b8:	0c 94 20 03 	jmp	0x640	; 0x640 <__fp_round>
 6bc:	0e 94 12 03 	call	0x624	; 0x624 <__fp_pscA>
 6c0:	38 f0       	brcs	.+14     	; 0x6d0 <__mulsf3+0x1c>
 6c2:	0e 94 19 03 	call	0x632	; 0x632 <__fp_pscB>
 6c6:	20 f0       	brcs	.+8      	; 0x6d0 <__mulsf3+0x1c>
 6c8:	95 23       	and	r25, r21
 6ca:	11 f0       	breq	.+4      	; 0x6d0 <__mulsf3+0x1c>
 6cc:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_inf>
 6d0:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_nan>
 6d4:	11 24       	eor	r1, r1
 6d6:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_szero>

000006da <__mulsf3x>:
 6da:	0e 94 31 03 	call	0x662	; 0x662 <__fp_split3>
 6de:	70 f3       	brcs	.-36     	; 0x6bc <__mulsf3+0x8>

000006e0 <__mulsf3_pse>:
 6e0:	95 9f       	mul	r25, r21
 6e2:	c1 f3       	breq	.-16     	; 0x6d4 <__mulsf3+0x20>
 6e4:	95 0f       	add	r25, r21
 6e6:	50 e0       	ldi	r21, 0x00	; 0
 6e8:	55 1f       	adc	r21, r21
 6ea:	62 9f       	mul	r22, r18
 6ec:	f0 01       	movw	r30, r0
 6ee:	72 9f       	mul	r23, r18
 6f0:	bb 27       	eor	r27, r27
 6f2:	f0 0d       	add	r31, r0
 6f4:	b1 1d       	adc	r27, r1
 6f6:	63 9f       	mul	r22, r19
 6f8:	aa 27       	eor	r26, r26
 6fa:	f0 0d       	add	r31, r0
 6fc:	b1 1d       	adc	r27, r1
 6fe:	aa 1f       	adc	r26, r26
 700:	64 9f       	mul	r22, r20
 702:	66 27       	eor	r22, r22
 704:	b0 0d       	add	r27, r0
 706:	a1 1d       	adc	r26, r1
 708:	66 1f       	adc	r22, r22
 70a:	82 9f       	mul	r24, r18
 70c:	22 27       	eor	r18, r18
 70e:	b0 0d       	add	r27, r0
 710:	a1 1d       	adc	r26, r1
 712:	62 1f       	adc	r22, r18
 714:	73 9f       	mul	r23, r19
 716:	b0 0d       	add	r27, r0
 718:	a1 1d       	adc	r26, r1
 71a:	62 1f       	adc	r22, r18
 71c:	83 9f       	mul	r24, r19
 71e:	a0 0d       	add	r26, r0
 720:	61 1d       	adc	r22, r1
 722:	22 1f       	adc	r18, r18
 724:	74 9f       	mul	r23, r20
 726:	33 27       	eor	r19, r19
 728:	a0 0d       	add	r26, r0
 72a:	61 1d       	adc	r22, r1
 72c:	23 1f       	adc	r18, r19
 72e:	84 9f       	mul	r24, r20
 730:	60 0d       	add	r22, r0
 732:	21 1d       	adc	r18, r1
 734:	82 2f       	mov	r24, r18
 736:	76 2f       	mov	r23, r22
 738:	6a 2f       	mov	r22, r26
 73a:	11 24       	eor	r1, r1
 73c:	9f 57       	subi	r25, 0x7F	; 127
 73e:	50 40       	sbci	r21, 0x00	; 0
 740:	9a f0       	brmi	.+38     	; 0x768 <__mulsf3_pse+0x88>
 742:	f1 f0       	breq	.+60     	; 0x780 <__mulsf3_pse+0xa0>
 744:	88 23       	and	r24, r24
 746:	4a f0       	brmi	.+18     	; 0x75a <__mulsf3_pse+0x7a>
 748:	ee 0f       	add	r30, r30
 74a:	ff 1f       	adc	r31, r31
 74c:	bb 1f       	adc	r27, r27
 74e:	66 1f       	adc	r22, r22
 750:	77 1f       	adc	r23, r23
 752:	88 1f       	adc	r24, r24
 754:	91 50       	subi	r25, 0x01	; 1
 756:	50 40       	sbci	r21, 0x00	; 0
 758:	a9 f7       	brne	.-22     	; 0x744 <__mulsf3_pse+0x64>
 75a:	9e 3f       	cpi	r25, 0xFE	; 254
 75c:	51 05       	cpc	r21, r1
 75e:	80 f0       	brcs	.+32     	; 0x780 <__mulsf3_pse+0xa0>
 760:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_inf>
 764:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_szero>
 768:	5f 3f       	cpi	r21, 0xFF	; 255
 76a:	e4 f3       	brlt	.-8      	; 0x764 <__mulsf3_pse+0x84>
 76c:	98 3e       	cpi	r25, 0xE8	; 232
 76e:	d4 f3       	brlt	.-12     	; 0x764 <__mulsf3_pse+0x84>
 770:	86 95       	lsr	r24
 772:	77 95       	ror	r23
 774:	67 95       	ror	r22
 776:	b7 95       	ror	r27
 778:	f7 95       	ror	r31
 77a:	e7 95       	ror	r30
 77c:	9f 5f       	subi	r25, 0xFF	; 255
 77e:	c1 f7       	brne	.-16     	; 0x770 <__mulsf3_pse+0x90>
 780:	fe 2b       	or	r31, r30
 782:	88 0f       	add	r24, r24
 784:	91 1d       	adc	r25, r1
 786:	96 95       	lsr	r25
 788:	87 95       	ror	r24
 78a:	97 f9       	bld	r25, 7
 78c:	08 95       	ret

0000078e <__tablejump2__>:
 78e:	ee 0f       	add	r30, r30
 790:	ff 1f       	adc	r31, r31
 792:	05 90       	lpm	r0, Z+
 794:	f4 91       	lpm	r31, Z
 796:	e0 2d       	mov	r30, r0
 798:	09 94       	ijmp

0000079a <_exit>:
 79a:	f8 94       	cli

0000079c <__stop_program>:
 79c:	ff cf       	rjmp	.-2      	; 0x79c <__stop_program>
